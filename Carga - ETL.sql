
--====================CARGAS(para 3 TABLAS)====================

SELECT COUNT(*)AS 'Cantidad de datos de [BD_CLIENTE]' FROM [BD_SEGUROS].[dbo].[BD_CLIENTE]
--902284
--AHORA CON LA PRIMERA CARGA
--1198856
--AHORA CON LA SEGUNDA CARGA
--1495428


SELECT COUNT(*)AS 'Cantidad de datos de [BD_TB_SEGURO]' FROM [BD_SEGUROS].[dbo].[BD_TB_SEGURO]
--1129733
--AHORA CON LA PRIMERA CARGA
--1423305
--AHORA CON LA SEGUNDA CARGA
--1719877


SELECT COUNT(*)AS 'Cantidad de datos de [TB_PRODUCTOS_FINANCIEROS]' FROM [BD_SEGUROS].[dbo].[TB_PRODUCTOS_FINANCIEROS]
--902284
--AHORA CON LA PRIMERA CARGA
--1198856
--AHORA CON LA SEGUNDA CARGA
--1495428

-- ==================== [dbo].[BD_AGENCIAS] ====================
SELECT  * FROM [dbo].[BD_AGENCIAS]

SELECT DISTINCT COD_AGENCIA FROM [dbo].[BD_AGENCIAS]
SELECT COD_AGENCIA,COUNT(COD_AGENCIA) AS 'CNT_COD_AGENCIA' FROM [dbo].[BD_AGENCIAS] GROUP BY COD_AGENCIA

SELECT DISTINCT BANCA FROM [dbo].[BD_AGENCIAS]
SELECT BANCA,COUNT(BANCA) AS 'CNT_BANCA' FROM [dbo].[BD_AGENCIAS] GROUP BY BANCA
--==========================
--SIN ESPECIFICAR		29 |
--==========================
--NEGOCIOS				4
--EMPRESA				35
--MERCADOS				30
--INVERSIONES			16
--ADMINISTRATIVA		765
--RED AGENCIAS			418

--CAMBIO DE DATOS SIN ESPECIFICAR A DESCONOCIDO EN LA COLUMMNA "BANCA"
UPDATE [dbo].[BD_AGENCIAS] SET BANCA = 'DESCONOCIDO' WHERE BANCA = 'SIN ESPECIFICAR';
-- SELECT BANCA,COUNT(BANCA) AS 'CNT_BANCA' FROM [dbo].[BD_AGENCIAS] WHERE BANCA = 'DESCONOCIDO' GROUP BY BANCA 



SELECT DISTINCT ZONA FROM [dbo].[BD_AGENCIAS]
SELECT ZONA,COUNT(ZONA) AS 'CNT_ZONA' FROM [dbo].[BD_AGENCIAS] GROUP BY ZONA
--==============================
--SIN ESPECIFICAR			29 |
--==============================
--PROVINCIA SUR				40
--NEGOCIOS					4 → NO ES ZONA
--LIMA NORTE				33
--LIMA CENTRO				71
--EMPRESA					35 → NO ES ZONA
--MERCADOS					30 → NO ES ZONA
--LIMA SUR					26
--INVERSIONES				16 → NO ES ZONA
--ADMINISTRATIVA			765 → NO ES ZONA
--PROVINCIA CENTRO ORIENTE	32
--LIMA OESTE				34
--LIMA ESTE					32
--LIMA MODERNA				91
--PROVINCIA NORTE			43
--CENTRO NEGOCIOS			16 → NO ES ZONA

--CAMBIO DE DATOS SIN ESPECIFICAR A DESCONOCIDO EN LA COLUMMNA "ZONA"
UPDATE [dbo].[BD_AGENCIAS] SET ZONA = 'DESCONOCIDO' WHERE ZONA = 'SIN ESPECIFICAR';
--CAMBIO DE DATOS SIN ESPECIFICAR A DESCONOCIDO EN LA COLUMMNA "ZONA"
UPDATE [dbo].[BD_AGENCIAS] SET ZONA = 'DESCONOCIDO' WHERE ZONA IN ('NEGOCIOS', 'EMPRESA', 'MERCADOS', 'INVERSIONES', 'ADMINISTRATIVA', 'CENTRO NEGOCIOS');
-- SELECT * FROM [dbo].[BD_AGENCIAS]
--SELECT ZONA,COUNT(ZONA) AS 'CNT_ZONA' FROM [dbo].[BD_AGENCIAS] WHERE ZONA = 'DESCONOCIDO' GROUP BY ZONA 

SELECT DISTINCT AGENCIA FROM [dbo].[BD_AGENCIAS]
SELECT AGENCIA,COUNT(AGENCIA) AS 'CNT_BANCA' FROM [dbo].[BD_AGENCIAS] GROUP BY AGENCIA ORDER BY 'CNT_BANCA' DESC

--ADMINISTRATIVA		858 → NO ES AGENCIA
--EMPRESA				35  → NO ES AGENCIA
--MERCADOS				30  → NO ES AGENCIA
--SIN ESPECIFICAR		29  → NO ES AGENCIA
--INVERSIONES			16  → NO ES AGENCIA
--SAN ISIDRO          	11
--NEGOCIOS				4   → NO ES AGENCIA
--ENAPU               	2
--ESPEC. CLUB VILLA   	1
--ESPECIAL GAMARRA    	1
--.
--.
--.

--CAMBIO DE DATOS ('ADMINISTRATIVA', 'EMPRESA', 'SIN ESPECIFICAR', 'MERCADOS', 'INVERSIONES', 'NEGOCIOS') A DESCONOCIDO EN LA COLUMMNA "ZONA" DE LOS CAMPOS 
UPDATE [dbo].[BD_AGENCIAS] SET AGENCIA = 'DESCONOCIDO' WHERE AGENCIA IN ('ADMINISTRATIVA', 'EMPRESA', 'SIN ESPECIFICAR', 'MERCADOS', 'INVERSIONES', 'NEGOCIOS');
--SELECT * FROM [BD_SEGUROS].[dbo].[BD_AGENCIAS] ORDER BY COD_AGENCIA ASC

--ELIMINAR TODOS LOS CAMPOS DESCONOCIDOS DE LAS COLUMNA BANCA, ZONA, AGENCIA
--DELETE FROM [dbo].[BD_AGENCIAS] WHERE BANCA = 'DESCONOCIDO';
--DELETE FROM [dbo].[BD_AGENCIAS] WHERE ZONA = 'DESCONOCIDO';
--DELETE FROM [dbo].[BD_AGENCIAS] WHERE AGENCIA = 'DESCONOCIDO';

-- ==================== [dbo].[BD_CLIENTE] ====================

SELECT COUNT(*) AS 'CNT_[dbo].[BD_CLIENTE]' FROM [dbo].[BD_CLIENTE]
SELECT * FROM [dbo].[BD_CLIENTE] ORDER BY MES_CORTE ASC

SELECT DISTINCT MES_CORTE FROM [dbo].[BD_CLIENTE] ORDER BY MES_CORTE ASC

-- Elimina registros de la tabla BD_CLIENTE donde el campo CODIGO está vacío o solo contiene espacios
DELETE FROM [dbo].[BD_CLIENTE] WHERE LTRIM(RTRIM(CODIGO)) = '';

SELECT COUNT(*) AS RegistrosAEliminar FROM [dbo].[BD_CLIENTE] WHERE SEXO IN ('P', 'U');
-- Elimina registros de la tabla BD_CLIENTE donde el campo SEXO tenga valores no válidos ('P' o 'U')
DELETE FROM [dbo].[BD_CLIENTE] WHERE SEXO IN ('P', 'U');
-- select from [dbo].[BD_CLIENTE]


SELECT CODIGO, COUNT(CODIGO) AS 'CNT_CODIGO' FROM [dbo].[BD_CLIENTE] GROUP BY CODIGO ORDER BY 'CNT_CODIGO' DESC

SELECT COUNT(*) AS RegistrosAEliminar FROM [dbo].[BD_CLIENTE] WHERE SEXO IN ('P', 'U');
SELECT COUNT(*) FROM [dbo].[BD_CLIENTE] WHERE SEXO IN ('P', 'U');
SELECT COUNT(*) FROM [dbo].[BD_CLIENTE] WHERE EDAD IS NULL

-- ==================== ==================== ==================== ==================== ====================


SELECT SITUACION, COUNT(*) AS Total FROM [dbo].[BD_CLIENTE] WHERE SITUACION IN ('A', 'P', 'C') GROUP BY SITUACION;

--cuenta los datos de cada sexo ,m, f, x(DESCONOCIDO
SELECT SEXO, COUNT(*) AS Total
FROM [dbo].[BD_CLIENTE]
WHERE SEXO IN ('M', 'F', 'X')
GROUP BY SEXO;
---- CREA LA VISTA DE DIMENSION SEXO 
--CREATE VIEW DIM_SEXO AS SELECT DISTINCT SEXO AS COD_SEXO,
--  CASE 
--    WHEN SEXO = 'M' THEN 'MASCULINO'
--    WHEN SEXO = 'F' THEN 'FEMENINO'
--    WHEN SEXO = 'X' THEN 'DESCONOCIDO'
--    ELSE 'NO ESPECIFICADO'
--  END AS DESC_SEXO
--FROM [dbo].[BD_CLIENTE]
--WHERE SEXO IS NOT NULL;

SELECT * FROM DIM_SEXO;

--ACTUALIZAR UBIGEO NULO O VACIO A 999999999
UPDATE [BD_CLIENTE] SET UBIGEO = '9999999' WHERE UBIGEO IS NULL OR LTRIM(RTRIM(UBIGEO)) = '';

SELECT SEXO, COUNT(*) AS Total
FROM [dbo].[BD_CLIENTE]
WHERE SEXO IN ('M', 'F', 'X')
GROUP BY SEXO;

-- CREA LA VISTA DE DIMENSION SEXO 
CREATE VIEW DIM_SEXO AS
SELECT DISTINCT
  SEXO AS COD_SEXO,
  CASE 
    WHEN SEXO = 'M' THEN 'MASCULINO'
    WHEN SEXO = 'F' THEN 'FEMENINO'
    WHEN SEXO = 'X' THEN 'DESCONOCIDO'
    ELSE 'NO ESPECIFICADO'
  END AS DESC_SEXO
FROM [dbo].[BD_CLIENTE]
WHERE SEXO IS NOT NULL;

SELECT * FROM DIM_SEXO;

--CREACION DE VISTA DE DIMENSION DE RANGO: 
CREATE VIEW DIM_RANGO_EDAD AS
SELECT DISTINCT
  CAST(EDAD AS INT) AS EDAD,
  CASE 
    WHEN TRY_CAST(EDAD AS INT) BETWEEN 0 AND 17 THEN '1'
    WHEN TRY_CAST(EDAD AS INT) BETWEEN 18 AND 29 THEN '2'
    WHEN TRY_CAST(EDAD AS INT) BETWEEN 30 AND 59 THEN '3'
    WHEN TRY_CAST(EDAD AS INT) BETWEEN 60 AND 74 THEN '4'
    WHEN TRY_CAST(EDAD AS INT) >= 75 THEN '5'
    ELSE '6'
  END AS COD_RANGO_EDAD,
  CASE 
    WHEN TRY_CAST(EDAD AS INT) BETWEEN 0 AND 17 THEN 'Niño / Adolescente'
    WHEN TRY_CAST(EDAD AS INT) BETWEEN 18 AND 29 THEN 'Joven Adulto'
    WHEN TRY_CAST(EDAD AS INT) BETWEEN 30 AND 59 THEN 'Adulto'
    WHEN TRY_CAST(EDAD AS INT) BETWEEN 60 AND 74 THEN 'Adulto Mayor'
    WHEN TRY_CAST(EDAD AS INT) >= 75 THEN 'Longevo'
    ELSE 'No Especificado'
  END AS RANGO_EDAD
FROM [dbo].[BD_CLIENTE]
WHERE ISNUMERIC(EDAD) = 1 AND EDAD IS NOT NULL;

select *from DIM_RANGO_EDAD


-- ==================== [dbo].[BD_SEGMENTO] ====================

--INSERTAR EL REGISTRO SIN ESPECIFICAR TABLA BD SEGMENTO 
INSERT INTO [dbo].[BD_SEGMENTO] (COD_SEGMENTO, DESC_SEGMENTO, GRUPO)
VALUES ('999999', 'SIN ESPECIFICAR', 'NO DEFINIDO');

SELECT*FROM [dbo].[BD_CLIENTE]


SELECT COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'AGENCIAS';

[dbo].[BD_AGENCIAS][dbo].[BD_CLIENTE][dbo].[BD_SEGMENTO][dbo].[BD_TB_SEGURO][dbo].[BD_UBIGEO][dbo].[TB_PRODUCTOS_FINANCIEROS][dbo].[TB_TIPO_SEGURO]



SELECT 
    TABLE_NAME,
    COLUMN_NAME, 
    DATA_TYPE, 
    CHARACTER_MAXIMUM_LENGTH, 
    IS_NULLABLE
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'dbo' 
  AND TABLE_NAME IN (
      'BD_AGENCIAS',
      'BD_CLIENTE',
      'BD_SEGMENTO',
      'BD_TB_SEGURO',
      'BD_UBIGEO',
      'TB_PRODUCTOS_FINANCIEROS',
      'TB_TIPO_SEGURO'
  )
ORDER BY TABLE_NAME, ORDINAL_POSITION;


-- ==================== [dbo].[BD_TB_SEGURO] ====================
CREATE OR ALTER VIEW FACT_SEGUROS_SIMPLE AS
SELECT 
  cli.CODIGO AS COD_CLIENTE,
  cli.AGENCIA AS COD_AGENCIA,
  cli.SEGMENTO COLLATE Modern_Spanish_CI_AS AS COD_SEGMENTO,
  cli.SEXO AS COD_SEXO,
  rango.COD_RANGO_EDAD,          -- Aquí reemplazamos la edad por el código de rango de edad
  segs.cd_subproducto COLLATE Modern_Spanish_CI_AS AS COD_TIPO_SEGURO,
  segs.cd_canal_venta COLLATE Modern_Spanish_CI_AS AS COD_CANAL,
  CAST(segs.fh_apertura AS DATE) AS FECHA_APERTURA,

  -- MEDIDAS
  COUNT(segs.CODIGO) AS CANTIDAD_SEGUROS,
  SUM(ISNULL(segs.im_prima, 0)) AS PRIMA_TOTAL

FROM BD_CLIENTE cli
INNER JOIN BD_TB_SEGURO segs
  ON cli.CODIGO COLLATE Modern_Spanish_CI_AS = segs.CODIGO COLLATE Modern_Spanish_CI_AS
INNER JOIN DIM_RANGO_EDAD rango
  ON cli.EDAD = rango.EDAD

GROUP BY 
  cli.CODIGO,
  cli.AGENCIA,
  cli.SEGMENTO,
  cli.SEXO,
  rango.COD_RANGO_EDAD,
  segs.cd_subproducto,
  segs.cd_canal_venta,
  CAST(segs.fh_apertura AS DATE);

  select* from FACT_SEGUROS_SIMPLE
	create database BDS_SEGUROS

--
SELECT 
  cli.CODIGO AS COD_CLIENTE,
  cli.AGENCIA AS COD_AGENCIA,
  cli.SEGMENTO COLLATE Modern_Spanish_CI_AS AS COD_SEGMENTO,
  cli.SEXO AS COD_SEXO,
  cli.EDAD,
  segs.cd_subproducto COLLATE Modern_Spanish_CI_AS AS COD_TIPO_SEGURO,
  segs.cd_canal_venta COLLATE Modern_Spanish_CI_AS AS COD_CANAL,
  CAST(segs.fh_apertura AS DATE) AS FECHA_APERTURA,

  -- MEDIDAS
  COUNT(segs.CODIGO) AS CANTIDAD_SEGUROS,
  SUM(ISNULL(segs.im_prima, 0)) AS PRIMA_TOTAL

INTO bds_SEGUROS.dbo.FACT_SEGUROS_SIMPLE
FROM BD_CLIENTE cli
INNER JOIN BD_TB_SEGURO segs
  ON cli.CODIGO COLLATE Modern_Spanish_CI_AS = segs.CODIGO COLLATE Modern_Spanish_CI_AS
GROUP BY 
  cli.CODIGO,
  cli.AGENCIA,
  cli.SEGMENTO,
  cli.SEXO,
  cli.EDAD,
  segs.cd_subproducto,
  segs.cd_canal_venta,
  CAST(segs.fh_apertura AS DATE);



-- ==================== [dbo].[TB_TIPO_SEGURO] ====================
SELECT * FROM [dbo].[BD_CLIENTE]

SELECT * FROM [dbo].[TB_TIPO_SEGURO]
SELECT COUNT(*)AS 'Cantidad de datos de [dbo].[TB_TIPO_SEGURO]' FROM [BD_SEGUROS].[dbo].[TB_TIPO_SEGURO]

SELECT DISTINCT CODIGO FROM [BD_SEGUROS].[dbo].[TB_TIPO_SEGURO]
SELECT DISTINCT GRUPO FROM [BD_SEGUROS].[dbo].[TB_TIPO_SEGURO]
SELECT DISTINCT TIPO FROM [BD_SEGUROS].[dbo].[TB_TIPO_SEGURO]
SELECT DISTINCT SUBTIPO FROM [BD_SEGUROS].[dbo].[TB_TIPO_SEGURO]
SELECT DISTINCT DESCRIPCION FROM [BD_SEGUROS].[dbo].[TB_TIPO_SEGURO]



--dasdasd
SELECT * FROM [dbo].[BD_TB_SEGURO]
SELECT DISTINCT MES_CORTE FROM [dbo].[BD_TB_SEGURO]

SELECT DISTINCT MES_CORTE FROM [dbo].[BD_CLIENTE]


SELECT * FROM [dbo].[TB_PRODUCTOS_FINANCIEROS]

SELECT DISTINCT MES_CORTE FROM [dbo].[BD_TB_SEGURO]
SELECT DISTINCT MES_CORTE FROM [dbo].[TB_PRODUCTOS_FINANCIEROS]
SELECT DISTINCT MES_CORTE FROM [dbo].[BD_CLIENTE]

SELECT * FROM [dbo].[BD_TB_SEGURO]
SELECT * FROM [dbo].[TB_PRODUCTOS_FINANCIEROS]
SELECT * FROM [dbo].[BD_CLIENTE]

-- Obtiene las edades únicas junto con la cantidad de clientes por edad, ordenadas ascendentemente
SELECT EDAD, COUNT(EDAD) AS CANTIDAD FROM [dbo].[BD_CLIENTE] GROUP BY EDAD ORDER BY EDAD ASC;


SELECT  COUNT(*) FROM [dbo].[BD_TB_SEGURO]


USE bds_SEGUROS;
GO

-- Elimina la tabla si existe para evitar errores
IF OBJECT_ID('dbo.FACT_SEGUROS', 'U') IS NOT NULL
    DROP TABLE dbo.FACT_SEGUROS;
GO

-- Crear la tabla con la estructura y datos de la vista
-- Elimina la tabla FACT_SEGUROS si ya existe
IF OBJECT_ID('dbo.FACT_SEGUROS', 'U') IS NOT NULL
    DROP TABLE dbo.FACT_SEGUROS;
GO
-- crear vista
USE bds_SEGUROS;
GO

CREATE OR ALTER VIEW dbo.FACT_SEGUROS_DETALLE_VW AS
SELECT
  cli.CODIGO AS COD_CLIENTE,
  cli.AGENCIA AS COD_AGENCIA,
  cli.SEGMENTO COLLATE Modern_Spanish_CI_AS AS COD_SEGMENTO,
  cli.SEXO AS COD_SEXO,
  rango.COD_RANGO_EDAD,
  segs.cd_subproducto COLLATE Modern_Spanish_CI_AS AS COD_TIPO_SEGURO,
  segs.cd_canal_venta COLLATE Modern_Spanish_CI_AS AS COD_CANAL,
  CAST(segs.fh_apertura AS DATE) AS FECHA_APERTURA,
  CAST(segs.fh_vencimiento AS DATE) AS FECHA_VENCIMIENTO,

  COUNT(segs.CODIGO) OVER (PARTITION BY cli.CODIGO, cli.AGENCIA, cli.SEGMENTO, cli.SEXO, rango.COD_RANGO_EDAD, segs.cd_subproducto, segs.cd_canal_venta, CAST(segs.fh_apertura AS DATE), CAST(segs.fh_vencimiento AS DATE)) AS CANTIDAD_SEGUROS,
  SUM(ISNULL(segs.im_prima, 0)) OVER (PARTITION BY cli.CODIGO, cli.AGENCIA, cli.SEGMENTO, cli.SEXO, rango.COD_RANGO_EDAD, segs.cd_subproducto, segs.cd_canal_venta, CAST(segs.fh_apertura AS DATE), CAST(segs.fh_vencimiento AS DATE)) AS PRIMA_TOTAL,-- define el grupo para el conteo(cantidad de polizas)  
  MAX(ISNULL(segs.im_prima, 0)) OVER (PARTITION BY cli.CODIGO, cli.AGENCIA, cli.SEGMENTO, cli.SEXO, rango.COD_RANGO_EDAD, segs.cd_subproducto, segs.cd_canal_venta, CAST(segs.fh_apertura AS DATE), CAST(segs.fh_vencimiento AS DATE)) AS PRIMA_MAXIMA, -- prima máxima pagada dentro de cada grupo
  CASE WHEN CAST(segs.fh_vencimiento AS DATE) BETWEEN GETDATE() AND DATEADD(DAY, 30, GETDATE()) THEN 1 ELSE 0 END AS POLIZA_PROXIMA_A_VENCER
FROM bd_SEGUROS.dbo.BD_CLIENTE cli
INNER JOIN bd_SEGUROS.dbo.BD_TB_SEGURO segs
  ON cli.CODIGO COLLATE Modern_Spanish_CI_AS = segs.CODIGO COLLATE Modern_Spanish_CI_AS
INNER JOIN bd_SEGUROS.dbo.DIM_RANGO_EDAD rango
  ON cli.EDAD = rango.EDAD;
GO



-- Crea la tabla FACT_SEGUROS con los datos y estructura, jalando datos de bd_SEGUROOS
--DIMENSIONES: Agencia, Cliente, Segmento, Sexo, Rango de edad, Tipo de seguro, Canal de venta, Fecha de apertura
--MEDIDAS: Cantidad de seguros contratados, prima total pagada
-- select*from FACT_SEGUROS
SELECT 
  cli.CODIGO AS COD_CLIENTE,
  cli.AGENCIA AS COD_AGENCIA,
  cli.SEGMENTO COLLATE Modern_Spanish_CI_AS AS COD_SEGMENTO,
  cli.SEXO AS COD_SEXO,
  rango.COD_RANGO_EDAD,
  segs.cd_subproducto COLLATE Modern_Spanish_CI_AS AS COD_TIPO_SEGURO,
  segs.cd_canal_venta COLLATE Modern_Spanish_CI_AS AS COD_CANAL,
  CAST(segs.fh_apertura AS DATE) AS FECHA_APERTURA,

  COUNT(segs.CODIGO) AS CANTIDAD_SEGUROS,
  SUM(ISNULL(segs.im_prima, 0)) AS PRIMA_TOTAL
INTO dbo.FACT_SEGUROS
FROM bd_SEGUROS.dbo.BD_CLIENTE cli
INNER JOIN bd_SEGUROS.dbo.BD_TB_SEGURO segs
  ON cli.CODIGO COLLATE Modern_Spanish_CI_AS = segs.CODIGO COLLATE Modern_Spanish_CI_AS
INNER JOIN bd_SEGUROS.dbo.DIM_RANGO_EDAD rango
  ON cli.EDAD = rango.EDAD
GROUP BY 
  cli.CODIGO,
  cli.AGENCIA,
  cli.SEGMENTO,
  cli.SEXO,
  rango.COD_RANGO_EDAD,
  segs.cd_subproducto,
  segs.cd_canal_venta,
  CAST(segs.fh_apertura AS DATE);
GO
-- Crear índices para mejorar rendimiento 
CREATE INDEX idx_fact_seguro_cliente ON dbo.FACT_SEGUROS(COD_CLIENTE);
CREATE INDEX idx_fact_seguro_agencia ON dbo.FACT_SEGUROS(COD_AGENCIA);
CREATE INDEX idx_fact_seguro_rangoedad ON dbo.FACT_SEGUROS(COD_RANGO_EDAD);
GO

USE bds_SEGUROS;
GO

SELECT TABLE_SCHEMA, TABLE_NAME
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME = 'BD_CLIENTE';

--
USE bds_SEGUROS;
GO

IF OBJECT_ID('dbo.FACT_SEGUROS_DETALLE', 'U') IS NOT NULL
    DROP TABLE dbo.FACT_SEGUROS_DETALLE;
GO

-- Crea la tabla FACT_SEGUROS con los datos y estructura, jalando datos de bd_SEGUROOS
--DIMENSIONES:Agencia, Cliente, Segmento, Sexo, Rango de edad (desde DIM_RANGO_EDAD), Tipo de seguro, Canal de venta, Fecha de apertura.
--MEDIDAS: Cantidad de seguros contratados, Prima total pagada.
-- select*from FACT_SEGUROS
SELECT DISTINCT
  COD_CLIENTE,
  COD_AGENCIA,
  COD_SEGMENTO,
  COD_SEXO,
  COD_RANGO_EDAD,
  COD_TIPO_SEGURO,
  COD_CANAL,
  FECHA_APERTURA,
  FECHA_VENCIMIENTO,
  CANTIDAD_SEGUROS,
  PRIMA_TOTAL,
  PRIMA_MAXIMA,
  SUM(POLIZA_PROXIMA_A_VENCER) OVER (PARTITION BY COD_CLIENTE) AS POLIZAS_PROXIMAS_A_VENCER
INTO dbo.FACT_SEGUROS_DETALLE
FROM dbo.FACT_SEGUROS_DETALLE_VW;
GO

-- Crear índices para mejorar rendimiento
CREATE INDEX idx_fact_cliente ON dbo.FACT_SEGUROS_DETALLE(COD_CLIENTE);
CREATE INDEX idx_fact_vencimiento ON dbo.FACT_SEGUROS_DETALLE(FECHA_VENCIMIENTO);
GO
